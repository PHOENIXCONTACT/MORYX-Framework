// Copyright (c) 2023, Phoenix Contact GmbH & Co. KG
// Licensed under the Apache License, Version 2.0

// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Moryx.ControlSystem.ProcessEngine.Model;

#nullable disable

namespace Moryx.ControlSystem.ProcessEngine.Model.Migrations.Sqlite
{
    [DbContext(typeof(SqliteProcessContext))]
    partial class SqliteProcessContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("ProductVersion", "6.0.8");

            modelBuilder.Entity("Moryx.ControlSystem.ProcessEngine.Model.ActivityEntity", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Completed")
                        .HasColumnType("TEXT");

                    b.Property<long?>("JobId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ProcessHolderId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ProcessId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Progress")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ResourceId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("Result")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Started")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Success")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TaskId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TracingData")
                        .HasColumnType("TEXT");

                    b.Property<string>("TracingText")
                        .HasColumnType("TEXT");

                    b.Property<long?>("TracingTypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.HasIndex("ProcessId");

                    b.HasIndex("TracingTypeId");

                    b.ToTable("ActivityEntities", "public");
                });

            modelBuilder.Entity("Moryx.ControlSystem.ProcessEngine.Model.JobEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("TEXT");

                    b.Property<long?>("PreviousId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("RecipeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RecipeProvider")
                        .HasColumnType("TEXT");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PreviousId");

                    b.ToTable("JobEntities", "public");
                });

            modelBuilder.Entity("Moryx.ControlSystem.ProcessEngine.Model.ProcessEntity", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("TEXT");

                    b.Property<long?>("JobId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ReferenceId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Rework")
                        .HasColumnType("INTEGER");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TypeName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.ToTable("ProcessEntities", "public");
                });

            modelBuilder.Entity("Moryx.ControlSystem.ProcessEngine.Model.TokenHolderEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("HolderId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ProcessId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tokens")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProcessId");

                    b.ToTable("TokenHolderEntities", "public");
                });

            modelBuilder.Entity("Moryx.ControlSystem.ProcessEngine.Model.TracingType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Assembly")
                        .HasColumnType("TEXT");

                    b.Property<string>("Classname")
                        .HasColumnType("TEXT");

                    b.Property<string>("NameSpace")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TracingTypes", "public");
                });

            modelBuilder.Entity("Moryx.ControlSystem.ProcessEngine.Model.ActivityEntity", b =>
                {
                    b.HasOne("Moryx.ControlSystem.ProcessEngine.Model.JobEntity", "Job")
                        .WithMany()
                        .HasForeignKey("JobId");

                    b.HasOne("Moryx.ControlSystem.ProcessEngine.Model.ProcessEntity", "Process")
                        .WithMany("Activities")
                        .HasForeignKey("ProcessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Moryx.ControlSystem.ProcessEngine.Model.TracingType", "TracingType")
                        .WithMany()
                        .HasForeignKey("TracingTypeId");

                    b.Navigation("Job");

                    b.Navigation("Process");

                    b.Navigation("TracingType");
                });

            modelBuilder.Entity("Moryx.ControlSystem.ProcessEngine.Model.JobEntity", b =>
                {
                    b.HasOne("Moryx.ControlSystem.ProcessEngine.Model.JobEntity", "Previous")
                        .WithMany()
                        .HasForeignKey("PreviousId");

                    b.Navigation("Previous");
                });

            modelBuilder.Entity("Moryx.ControlSystem.ProcessEngine.Model.ProcessEntity", b =>
                {
                    b.HasOne("Moryx.ControlSystem.ProcessEngine.Model.JobEntity", "Job")
                        .WithMany("Processes")
                        .HasForeignKey("JobId");

                    b.Navigation("Job");
                });

            modelBuilder.Entity("Moryx.ControlSystem.ProcessEngine.Model.TokenHolderEntity", b =>
                {
                    b.HasOne("Moryx.ControlSystem.ProcessEngine.Model.ProcessEntity", "Process")
                        .WithMany("TokenHolders")
                        .HasForeignKey("ProcessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Process");
                });

            modelBuilder.Entity("Moryx.ControlSystem.ProcessEngine.Model.JobEntity", b =>
                {
                    b.Navigation("Processes");
                });

            modelBuilder.Entity("Moryx.ControlSystem.ProcessEngine.Model.ProcessEntity", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("TokenHolders");
                });
#pragma warning restore 612, 618
        }
    }
}

