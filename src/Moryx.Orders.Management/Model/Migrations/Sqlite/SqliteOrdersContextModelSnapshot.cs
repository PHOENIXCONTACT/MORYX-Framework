// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Moryx.Orders.Management.Model;

#nullable disable

namespace Moryx.Orders.Management.Model.Migrations.Sqlite
{
    [DbContext(typeof(SqliteOrdersContext))]
    partial class SqliteOrdersContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("ProductVersion", "6.0.8");

            modelBuilder.Entity("Moryx.Orders.Management.Model.OperationAdviceEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LoadingEquipment")
                        .HasColumnType("TEXT");

                    b.Property<long>("OperationId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("PartId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ToteBoxNumber")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OperationId");

                    b.ToTable("OperationAdviceEntities", "public");
                });

            modelBuilder.Entity("Moryx.Orders.Management.Model.OperationEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ActualEnd")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ActualStart")
                        .HasColumnType("TEXT");

                    b.Property<int>("AssignState")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Identifier")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Number")
                        .HasColumnType("TEXT");

                    b.Property<long>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OverDeliveryAmount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("PlannedEnd")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PlannedStart")
                        .HasColumnType("TEXT");

                    b.Property<long>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Source")
                        .HasColumnType("TEXT");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TargetAmount")
                        .HasColumnType("INTEGER");

                    b.Property<double>("TargetCycleTime")
                        .HasColumnType("REAL");

                    b.Property<string>("TargetStock")
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalAmount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UnderDeliveryAmount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Unit")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OperationEntities", "public");
                });

            modelBuilder.Entity("Moryx.Orders.Management.Model.OperationJobReferenceEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("JobId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("OperationId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OperationId");

                    b.ToTable("OperationJobReferenceEntities", "public");
                });

            modelBuilder.Entity("Moryx.Orders.Management.Model.OperationRecipeReferenceEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("OperationId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("RecipeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OperationId");

                    b.ToTable("OperationRecipeReferenceEntities", "public");
                });

            modelBuilder.Entity("Moryx.Orders.Management.Model.OperationReportEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comment")
                        .HasColumnType("TEXT");

                    b.Property<int>("ConfirmationType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FailureCount")
                        .HasColumnType("INTEGER");

                    b.Property<long>("OperationId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ReportedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("SuccessCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserIdentifier")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OperationId");

                    b.ToTable("OperationReportEntities", "public");
                });

            modelBuilder.Entity("Moryx.Orders.Management.Model.OrderEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("TEXT");

                    b.Property<string>("Number")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("OrderEntities", "public");
                });

            modelBuilder.Entity("Moryx.Orders.Management.Model.ProductPartEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Classification")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Number")
                        .HasColumnType("TEXT");

                    b.Property<long>("OperationId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Quantity")
                        .HasColumnType("REAL");

                    b.Property<int>("StagingIndicator")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Unit")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OperationId");

                    b.ToTable("ProductPartEntities", "public");
                });

            modelBuilder.Entity("Moryx.Orders.Management.Model.OperationAdviceEntity", b =>
                {
                    b.HasOne("Moryx.Orders.Management.Model.OperationEntity", "Operation")
                        .WithMany("Advices")
                        .HasForeignKey("OperationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Operation");
                });

            modelBuilder.Entity("Moryx.Orders.Management.Model.OperationEntity", b =>
                {
                    b.HasOne("Moryx.Orders.Management.Model.OrderEntity", "Order")
                        .WithMany("Operations")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Moryx.Orders.Management.Model.OperationJobReferenceEntity", b =>
                {
                    b.HasOne("Moryx.Orders.Management.Model.OperationEntity", "Operation")
                        .WithMany("JobReferences")
                        .HasForeignKey("OperationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Operation");
                });

            modelBuilder.Entity("Moryx.Orders.Management.Model.OperationRecipeReferenceEntity", b =>
                {
                    b.HasOne("Moryx.Orders.Management.Model.OperationEntity", "Operation")
                        .WithMany("RecipeReferences")
                        .HasForeignKey("OperationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Operation");
                });

            modelBuilder.Entity("Moryx.Orders.Management.Model.OperationReportEntity", b =>
                {
                    b.HasOne("Moryx.Orders.Management.Model.OperationEntity", "Operation")
                        .WithMany("Reports")
                        .HasForeignKey("OperationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Operation");
                });

            modelBuilder.Entity("Moryx.Orders.Management.Model.ProductPartEntity", b =>
                {
                    b.HasOne("Moryx.Orders.Management.Model.OperationEntity", "Operation")
                        .WithMany("ProductParts")
                        .HasForeignKey("OperationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Operation");
                });

            modelBuilder.Entity("Moryx.Orders.Management.Model.OperationEntity", b =>
                {
                    b.Navigation("Advices");

                    b.Navigation("JobReferences");

                    b.Navigation("ProductParts");

                    b.Navigation("RecipeReferences");

                    b.Navigation("Reports");
                });

            modelBuilder.Entity("Moryx.Orders.Management.Model.OrderEntity", b =>
                {
                    b.Navigation("Operations");
                });
#pragma warning restore 612, 618
        }
    }
}
